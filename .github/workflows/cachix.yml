name: "cachix"
on:
  push:

jobs:
  generate_matrix:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.generate_packages.outputs.packages }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      - name: generate flake.json
        run: nix flake show --json > flake.json
      - id: generate_packages
        run: |
          packages=$(jq -c '.packages."x86_64-linux" | keys' < flake.json)
          printf "packages::%s" "$packages" >> $GITHUB_OUTPUT

  build:
    needs: [generate_matrix]
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        package: ${{fromJson(needs.generate_matrix.outputs.packages)}}

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main
    - uses: cachix/cachix-action@v12
      with:
        name: starrfox
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix build .#${{ matrix.package }}
